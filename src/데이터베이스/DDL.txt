[ 관계형데이터베이스 ] 2025-07-15(화)
- 주의할 점
SQL 대소문자 구분하지 않는다. 
SQL 명령어 문장 끝에( ; ) 세미콜론 단위로 실행한다. 
---------------------------------------------
[ 메타데이터 관리어 ]
show 
-  show databases;  --> DB 서버 내 전체 데이터 베이스 목록 조회
-  show vareiables like 'datadir';   -->DB 서버내 local path  조회
-  show tables; -->  현재 *활성화*중인 데이터베이스 내 모든 테이블 조회

use
-  use 데이터베이스명 : DB 서버내 지정한 데이터베이스 활성화(사용)

create 
- create databases 데이터베이스명 :  지정한 데이터베이스 생성
- drop databases 데이터베이스명 : 지정한 데이터베이스 삭제
- cteate table 테이블명(
	속성명1 타입 제약조건 , 
	속성명2 타입 제약조건
);

drop
- drop databases 데이터베이스명 : 
- drop databases if exists 데이터베이스명 : 만약에 지정한 데이터베이스가 있다면 삭제
- drop table 테이블명;
- drop table if exists 테이블명;

---------------------------------------------
[데이터타입]
테이블 내 속성들이 갖는(저장하는) 자료들의 분류/타입
---------------------------------------------
1) 정수 
tinyint		1byte : 	-127 ~128
smallint		2byte : 	+-3만 정도
mediumint	3byte : 	+-800만 정도
int*		4byte : 	+-21억 정도
bigint		8byte : 	+-21억 이상

==> signed : 부호가 있다( + , - ) 기본값
==> unsigned : 명시를 해야 함. 음수를 안쓰는 대신 2배 (허용범위 * 2, 42억개)
 int unsigned --> 메모리를 효율적으로 사용할 수 있다.

int unsigned : 42억까지 (대신 음수가 없다. 메모리를 효율적으로 사용 가능!)
---------------------------------------------
2) 실수
float 		4byte : 	부동소수점
double		8byte : 	부동소수점
decimal*		문자타입 : 소수점을 문자로 처리하는 타입, 오차없음
			---> 정확한 계산!!(공학적 계산은 decimal 사용!)	
---------------------------------------------
3) 날짜
date 		날짜표현 : 2025-07-15
time 		시간표현 : 10:02:03
datetime		날짜시간 : 2025-07-15 10:02:30
---------------------------------------------
4) 문자
char(고정길이)	문자열표현 : 고정길이 -> 최대 255글자
==> char(5) -> "유재석" -> [유][재][석][ ][ ]

varchar(가변길이)* 	문자열표현 : 가변길이 ->석 최대 255글자
==> varchar(5) -> "유재석" -> [유][재][석] 남은 길이 삭제

text 		문자열 표현 : 최대 6만 글자!
longtext*		문자열 표현 : 최대 42억 글자 , 4GB , 대용량(게시판)
---------------------------------------------
5) 논리
bool		true / false --> tinyint(1byte : -127 ~128)와 같다. 
---------------------------------------------

[ 제약 조건 ] : 테이블 내 속성의 *제약조건

1) not null	:  해당 속성에 null 값을 저장하지 않는다.
2) unique		:  해당 속성에 중복값을 허용하지 않는다.(중복 방지)
3) default		:  해당 속성에 값 생략시 기본값으로 초기화 한다. 
 ==> default 0 	:  해당 속성값이 생략되면 0 초기화
 ==> default now() : 해당 속성에 값이 생략되면 날짜/시간 초기화
4) auto_increment  : (MYSQL) 해당 속성에 자동번호 초기화 한다. 
----------------------------------------------
5) ★primary key 	:  기본식별키(PK), 식별가능한 고유값, 필드 키
 ==> 절대적으로 중복이 없는 고유값
 ==> 학번, 사번
 ==> 특징) not null, unique 자동 포함됨
 ==> constraint primary key( PK필드명 )
 ? 무결성 : 데이터의 정확성, 일관성, 유효성을 유지하는 것을 의미
  이는 데이터가 의도치 않게 또는 고의적으로 변경, 삭제, 손상되지 않도록 보장하는 것을 포함

6) ★foreign key	: 참조/외래키(FK), 다른 테이블의 기본키(PK)를 참조하는 키
==> 다른 테이블의 기본키(PK)를 참조하여 추가 정보 조합!
==> 수강신청학번, 출근한직원사번, 글작성자회원번호
==> ★특징) FK 필드는 NULL과 중복이 가능하다. 일대 다라 중복과 생략 가능!!!!!
==> !선언) constraint foreign key ( FK필드명 ) referensces 참조할 테이블명( PK필드명 );

==> !주의) FK 속성타입 == PK 속성타입( 속성타입 일치해야 한다.  )
==> ★관례적으로는 PK 속성명과 FK 속성명을 일치하게 한다. 
 ?   constraint : 강제

      n : n 은 거의 없고 1 : 1 , 거의 대부분이 1 : n !!!
----------------------------------------------




























