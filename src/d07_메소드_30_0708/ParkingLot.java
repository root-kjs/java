package d07_메소드_30_0708;

public class ParkingLot {
    // 1, 멤버변수
    int time; // 주차 시간(분)
    int fee; //  요금

    // 2. calculateFee 메소드
    // 매개변수 : 주차시간(분)
    // 반환값 : 최종 주차요금
    // //1. 주차 시간(분)을 매개변수로 받아, 요금 규정에 따라 계산된 최종 주차 요금을 반환하는 calculateFee 메소드를 정의하세요.
    //2. 요금 규정:
    //기본 요금: 최초 30분까지 1,000원
    //추가 요금: 30분 초과 시, 매 10분마다 500원씩 추가
    //일일 최대 요금: 20,000원
    // 그런데 좀 문제가 애매하긴 하다... 일일 최대요금이라고 하면 기준이 들어온 시간 기준으로 1일인지, 그냥 날짜 기준 1일인지 알수가 없어...
    // 그리고 일일 최대요금 갱신하면 그다음 날짜 20000원 다시 카운트해야 하나...복잡해지는데..ㅠㅠ
    // 일단 예제이니 단순하게 시간(분)기준으로! 들어온 시간 부터 카운트

//    int calculateFee( int time ){
//        fee = 1000; // 주차 요금 기본값(기본요금) // 요금 관련 초기값은 할인등도 있으니 걍 0으로 시작하느게 좋을 것 같다...
//        if ( time > 30 ) { // 주차시간 30분 넘으면
//            if( fee > 20000 ){  // 만약 주차요금 20000원 넘으면.
//                fee = 20000;
//                return fee;
//            } else{
//                fee += ((time - 30) / 10 ) * 500;;
//                return  fee ;
//            }
//            // 단순 최대요금 가부 여부는 선생님처럼 삼항식을 마지막에 활용하자!
//        }
//        return fee; // 30분 미만은 기본 요금
//    }// func end

    // 김현수 강사님 답안
//    int calculateFee( int time ){
//        int money = 0;
//        // 이것저것
//        if( time<= 30 ){ money = 1000; }
//        else{    money = ( ( time -30 ) / 10 * 500 ) + 1000 ;  }
//        money = money >= 20000 ? 20000 : money;
//
//        return money;
//    } // func end
//
     // 개선 된 답안
    int calculateFee( int time ){
        if( time <= 30) { // 기본 요금 먼저 선빵 계산
            fee = 1000; // 이미 클래스 안에 멤버 변수로 있으니. 타입 선언 패스 초기값도 패스!...
        }else{  // 추가 요금 계산
            fee = 1000 + (((time - 30) / 10) * 500 ); 
        }
        fee = fee > 20000 ? fee = 20000 : fee; // 최대요금 계산으로 마무으리....
        return fee; // 어차피 변수가 같으니 리턴은 마지막에 서도 되용

    }// func end
} // class end
