package 종합.예제3_게시판3_클래스배열;

import java.util.Scanner;

//        [JAVA] 종합예제3 : boardService3 (객체 활용)
//                [ 목표 ] 종합예제2 에서 객체 문법 추가하여 , 최대 100개의 게시물을 저장하고 조회할 수 있는 간단한 콘솔 게시판 프로그램을 구현합니다.
//[ 요구사항 ]
//        1. 게시물 저장 공간 만들기
//        · 최대 100개의 게시물을 저장할 수 있어야 합니다.
//        · 각 게시물은 '내용'과 '작성자' 속성 를 가지는 Board 클래스 선언하시오..
//        · 총 1개의 Board[] 배열변수를 선언하여 저장 공간을 만드세요. (예: Board[] boards = new Board[100] )
//        · 모든 변수는 null로 초기화하여, 해당 공간이 비어있음을 나타내도록 합니다.
//        2. 메인 프로그램 흐름 구현하기
//        · 프로그램은 사용자가 강제 종료하기 전까지 계속 실행되어야 합니다. for(;;) 무한루프를 사용하세요.
//        · 무한루프 안에서 사용자에게 메뉴를 보여주고, Scanner를 통해 원하는 기능의 번호를 입력받으세요.
//        · 기능 1: 게시물 쓰기 (입력값: 1)
//        - 사용자가 1을 입력하면, "내용 : "과 "작성자 : "를 순서대로 물어보고 입력받습니다.
//        - Board 객체로 생성하여 입력받은 '내용' 과 '작성자'를 각 멤버변수에 대입 합니다.
//                - 가장 먼저 발견된 빈 공간에 입력받은 내용과 작성자를 저장하고 "[안내] 글쓰기 성공" 메시지를 출력합니다.
//        - 게시물 공간이 모두 차 있다면, "[경고] 게시물을 등록할 공간이 부족합니다." 라는 메시지를 출력합니다.
//        · 기능 2: 게시물 출력 (입력값: 2)
//        - 사용자가 2를 입력하면, 저장된 모든 게시물을 아래 형식으로 출력합니다.
//                - 저장 공간이 비어있지 않은(null이 아닌) 경우에만 출력합니다.
//[ 실행 예시 ]  <종합예제2 과 동일 참고>
//============= My Community =============
//        1.게시물쓰기 | 2.게시물출력
//                ========================================
//                선택 > 1
//        내용 : 안녕하세요
//        작성자 : 유재석
//                [안내] 글쓰기 성공
//
//============= My Community =============
//        1.게시물쓰기 | 2.게시물출력
//                ========================================
//                선택 > 1
//        내용 : 반갑습니다
//        작성자 : 강호동
//                [안내] 글쓰기 성공
//
//============= My Community =============
//        1.게시물쓰기 | 2.게시물출력
//                ========================================
//                선택 > 2
//                ============= 게시물 목록 =============
//                작성자 : 유재석
//        내용 : 안녕하세요
//                ------------------------------------
//        작성자 : 강호동
//        내용 : 반갑습니다
//                ------------------------------------
//
//                ============= My Community =============
//                1.게시물쓰기 | 2.게시물출력
//                ========================================
//                선택 > 1
//        내용 : 테스트
//        작성자 : 이수근
//                [경고] 게시물을 등록할 공간이 부족합니다.
public class BoardService3 {
    public static void main(String[] args) {
        // 01. 공통 화면 출력

        // 01. 메모리 설계 ( 클래스 멤버 변수 선언 및 클래스 배열 객체 선언
        // 문제안의 서로 다른  속성들을 클래스의  멤버 변수로 선언.
        // 문제안의 큰 범주의 같은 속성을  클래스로 배열 선언
        // 자바는 타입을 먼저 선언해줘야 한다. 
        // 클래스를 배열로 선언한다면 클래스명[] Board[] boards = new Board[]; 원하는 타입의 배열 객체 new 생성 전역변수
        Board[] boards = new Board[100]; // boards라는 변수에 보드 Board 객체 100개를 저장한 배열 자료 저장

        for(;;) {   // 무한 루프
            // 포문 안에서 출력되는 내용을 잘 생각 할 것!

            System.out.println("============= My Community =============");
            System.out.println(" 1.게시물쓰기 | 2.게시물출력");
            System.out.println("========================================");
            System.out.print("선택 > "); // for문 안에  사용자 입력값이 있어야 서로 다른 입력 값을 받을 수 있다.
            Scanner scan = new Scanner( System.in );
            int choose = scan.nextInt();
            
            if (choose == 1) { // 사용자 선택1 입력시,
                // 지역변수의 위치는 해당 제어문 안에서의 반복 조건에 해당하는 위ㅊㅣ에서 선언 할 것
                System.out.print("내용 : "); // 입력받은 값 안내
                String content = scan.next(); // 입력받은 값 저장
                System.out.print("작성자 : ");
                String writer = scan.next();// 입력받은 값 저장

                Board board = new Board(); // 객체 생성하여 입력받을 값을 클래스 멤버변수에 대입!!!
                board.content = content;  // 내용 멤버 변수에 대입
                board.writer =writer;  // 작성자 멤버 변수에 대입
                
                // borad 배열 내 빈 공간이 있다면 해당 클래스 속성(멤버변수 값 대입)
                // 자바는 push 함수가 없기 때문에 직접 멤버 변수안에, 빈공간(배열)을 찾아서 해당 값을 대입해야 한다.

                boolean check = false;  //저장 성공, 저장 실패
                for( int i = 0; i <= boards.length - 1 ; i++ ){
                    if( boards[i] == null ){
                        boards[i] = board;
                        check = true;
                        break;
                    } // if end :  비어있는 배열 공간을 찾아서 조건문
                } // 보드 배열을 돌아서 비어있는 공간을 순회 for end
                if( check ){
                    System.out.println("[안내] 글쓰기 성공");
                } else {
                    System.out.println( " 글쓰기 공간이 부족합니다. " );
                }

            } else if (choose == 2) { // 사용자 선택2 입력시,
                for( int i = 0; i <= boards.length -1; i++){
                    Board board = boards[i]; // 자바는 반드시 변수 타입을 명시할 것!
                    if(board != null ){ // 입력된 배열의 값만 출력해 줄 것!
                        System.out.print("작성자 : "+ board.writer );
                        System.out.println("내용 : " + board.content );
                        System.out.println("------------------------------------");
                    } // if end
                } // for end
            } else if ( choose == 3 ){ // 만약 입력값이 x 이면 무한루프 포문 종료! // 자바의 문자열 같은 비교는 .equals()
                break;
            }
        } // 무한 루프 end
    } //main end
} // class end
