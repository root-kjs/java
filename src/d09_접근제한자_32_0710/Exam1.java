package d09_접근제한자_32_0710;

import d09_접근제한자_32_0710.pk1.A;
import d09_접근제한자_32_0710.pk2.C;

public class Exam1 {

    public static void main(String[] args) {
/*
 다형성, 캡슐화 
 접근 제한자 [ 캡슐화 ] --> 알약처럼 내부를 감춘다...정보 차등 공개

     1. 정의 : 클래스, 멤버 변수, 생성자, 메소드 등 접근(호출/사용) 제한한다.
        - 실무에서는 비정상적인 접근 또는 보안이 필요한 곳에서 필수로 사용한다.
     2, 종류 : 
         1) public : 공개, 프로젝트폴더내 어디서든 접근가능
         2) private : 비공개, 현재 클래스에서만 접근 가능
         3) (default) : 같은 하위 패키지에서만 접근 가능, 키워드 선언 하지 않음
         4) protected : 같은 하위 패키지에서만 접근 가능, 상속관계 예외
     3. 사용법
        1) 멤버 변수 앞에 ---------->         접근제한자 타입 변수명;
        2) 생성자 앞에  ---------->           접근제한자 생성자명(){};
        3) 클래스명 앞에 ---------->          접근제한자 class 클래스명;


             ---> 클래스명 앞에 private 불가!!!! 왜?
             ---> 자바에서는 **최상위 클래스(top-level class)**에 private 사용을 허용하지 않습니다. --> 아무도 접근 못 하므로 의미 없음
             --> 하지만, 내부 클래스(중첩 클래스)는 외부 클래스 내부에서만 쓸 수 있기 때문에 private 사용 가능해요.

        4) 메소드명 반환 타입 앞에---------->  접근제한자 타입 메소드명;
        
     * 패키지(폴더)도 식별자
        - 같은 패키지 내 같은 클래스명은 존재할 수 없다.
        - 단, 다른 패키지에서는 존재 가능!
    import 경로.클래스명; --> 같은 패키지가 아닌 다른 패키지를 가져오는 키워드
    
    단, java.lang 패키지는 예외/생략 가능 (System, String 등등)



 */

        A a = new A();
        System.out.println( a.공개변수 );
        //System.out.println( a.비공개변수 ); --> 오류발생 에러 남
       // System.out.println( a.일반변수 ); --> 같은 패키지가 아니니까..



        C c = new C();
        System.out.println( c.반환메소드() ); // 멤버 변수가 비공개여도 메소드가 공개라 호출 가능!
        // 비공개는 멤버변수를 안전하게 사용 가능!
        // ★★★★ 비공개 멤버 변수를 반환하는 공개 메소드 --> getter ★★★
        // 실무에서는 멤버변수라 거의 다 privatw
        // 멤버변수의 직접 접근보다는 간접 접근
        // 함수를 통해 유효성이나 규칙을 추가 해서 우회해서 보안 적용된 멤버 변수 접근하도록 하기 위해!
        //필드를 public으로 두면 안 되는 이유?
//        ➡ 보안, 유효성 검사, 디버깅 어려움 발생!
//➡ 그래서 private + getter/setter로 보호하고 관리
        //
 /*

         System.out.println( c.저장메소드() ); //접근자가 private이라 오류 발생!!!

         [ getter & setter ]
         클래스 내 private 멤버변수를 다른 클래스가 사용할 수 있게 하는 메소드
         1) 저장/대입 목적(관례적으로) : setter
            -- > 저장해야 하니 반환값이 없어서 void
            
         public void set멤버변수명( 타입 매개변수  ){
         
            this.멤버변수명 = 매개변수;
            
         }

         2) 호출/반환목적
         public 반환타입 get멤버변수명(){
            return 멤버변수명;
         }



*/

    } // main end

}// class end



















